using System;
using Simulation;

/// <summary>
/// Classe de simulação do Tanque
/// </summary>
public class Tank : SimulationTank
{
	///<summary>
	/// Método chamado antes do início da simulação
	/// Utilize-o para inicializar variáveis
	///</summary>
	public override void OnSimulationStarting()
	{
		Level = 50;            // altura inicial do tanque
		ValveConstant1 = 0.5;  // constante da válvula de saída 1
		ValveConstant2 = 0.5;  // constante da válvula de saída 2
		TankArea = 1;          // área da base do tanque
	}
	
	/// <summary>
	/// Método de atualização do estado do tanque para cada intervalo de tempo
	/// </summary>
	/// <param name="tempo">Instante atual de tempo dado em segundos</param>
	/// <param name="passo">Tamanho do intervalo de tempo entre cada chamada do método OnUpdate dado em segundos</param>
	/// <param name="entrada1">Entrada 1 do tanque</param>
	/// <param name="entrada2">Entrada 2 do tanque</param>
	/// <param name="saida1">Saída 1 do tanque</param>
	/// <param name="saida2">Saída 2 do tanque</param>
	/// <returns>Saída do tanque</returns>
	public override SimulationData OnUpdate(double tempo, double passo, double entrada1, double entrada2, double saida1, double saida2)
	{
		double saidaEsquerda = 0;
		double saidaDireita = 0;
		double level = RungeKutta4(Level, tempo, tempo + passo,  (t, x) => // dx/dt
			{
				double qs1 = ValveConstant1 * Math.Sqrt(x);  // vazão de saída 1
				double qs2 = ValveConstant2 * Math.Sqrt(x);  // vazão de saída 2
				double xd = (entrada1 + entrada2 + saida1 + saida2 - qs1 - qs2 ) / TankArea; // (vazão de entrada - vazão de saída) / área da base
				                                                                             // Note que as saídas também podem ser entradas. O sinal indica a direção do fluxo.
				
				if (x < 0)
					return 0;

				saidaEsquerda = qs1;
				saidaDireita = qs2;
				
				return xd;
			}
		);
		
		//Plot("Tanque X", tempo, Level); //plota o nivel do tanque
		//Log(tempo, output); //imprime a vazão na aba de log da simulação
		//Log("Exemplo de texto impresso na aba log");
		
		return new SimulationData(level, saidaEsquerda, saidaDireita);
	}
	
	
	
	
	// Você pode adicionar novos métodos aqui se precisar, ex:
	// public int SomaValores(int val1, int val2)
	// {
	//       return val1 + val2;
	// }
}